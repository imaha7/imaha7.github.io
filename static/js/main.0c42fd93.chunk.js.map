{"version":3,"sources":["Home.js","PokemonList.js","Pokemon-Context.js","PokemonDetail.js","MyPokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Container","fluid","className","Row","Col","sm","size","offset","md","lg","draggable","src","alt","Jumbotron","style","fontWeight","process","xl","to","Button","color","fontSize","borderRadius","class","marginRight","Component","MyPokemonList","props","state","pokemon","myPokemon","JSON","parse","localStorage","getItem","fetch","then","res","json","parsedJSON","results","map","data","name","url","thumbnail","setState","catch","error","console","log","this","textDecoration","outline","length","item","urlDetail","xs","Card","id","CardImg","top","title","CardFooter","borderBottomRightRadius","borderBottomLeftRadius","PokemonContext","createContext","arrNickname","PokemonProvider","updatepokemon","newpokemon","Math","random","Swal","fire","icon","text","showConfirmButton","timer","input","inputValue","inputPlaceholder","showCancelButton","inputValidator","val","result","value","nickname","undefined","forEach","p","push","includes","allowOutsideClick","allowEscapeKey","setItem","stringify","concat","renamepokemon","currentPokemon","filteredPokemon","filter","releasepokemon","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","releaseallpokemon","mypokemon","clear","Provider","children","React","PokemonConsumer","Consumer","PokemonDetail","pokemon_details","pokemon_name","window","location","href","split","width","onClick","event","body","CardTitle","tag","stats","stat","CardText","Progress","base_stat","height","weight","base_experience","abilities","ability","types","type","randomColor","floor","pow","toString","slice","backgroundColor","borderColor","held_items","item_hi","moves","move","MyPokemon","Fragment","CardSubtitle","Main","document","background","backgroundSize","backgroundPosition","backgroundAttachment","backgroundRepeat","variant","exact","path","component","PokemonList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.0c42fd93.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Jumbotron,\r\n} from \"reactstrap\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <Container fluid={true} className=\"py-5\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm={{ size: 8, offset: 2 }} md={{ size: 6, offset: 3 }} lg={{ size: 4, offset: 4 }}>\r\n                            <img draggable=\"false\" src=\"/pokemon_logo.png\" className=\"w-100\" alt={\"Logo \" + process.env.REACT_APP_TITLE} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"my-5 text-center\">\r\n                        <Col>\r\n                            <Jumbotron>\r\n                                <h1 className=\"display-4 text-light\">Welcome to Pokemon</h1>\r\n                                <h2 className=\"lead text-light\">\r\n                                    Project Assignment<br />\r\n                                    ReactJS Programmer Test - PT. Zegen Solusi Mandiri\r\n                                </h2>\r\n                                <p className=\"text-light\" style={{fontWeight: \"bold\",}}>Created by {process.env.REACT_APP_CREATOR}</p>\r\n\r\n                                <h2 className=\"lead text-light\">\r\n                                    <b style={{fontWeight: \"bold\",}}>Notes :</b><br/> 50% Success Opportunity Pokemon Caught<br/> 50% Fail Opportunity Pokemon Caught. <br/>\r\n                                    Well Good Luck!\r\n                                </h2>\r\n                            </Jumbotron>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"my-5 justify-content-center\">\r\n                        <Col md={{ size: 4 }} xl={{ size: 4 }}>\r\n                            <Link to=\"/pokemon-list\">\r\n                                <Button color=\"warning\" className=\"py-2 w-100\" style={{fontSize:\"24px\", borderRadius:\"30px\", fontWeight: \"bold\",}}><i class=\"fa-solid fa-gamepad\" style={{marginRight: \"12px\"}}></i>Catch Pokemon Now</Button>\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Card,\r\n    CardImg,\r\n    CardFooter,\r\n} from \"reactstrap\";\r\n\r\nclass MyPokemonList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokemon: [],\r\n            myPokemon: JSON.parse(localStorage.getItem('MyPokemon')) ? JSON.parse(localStorage.getItem('MyPokemon')) : []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://pokeapi.co/api/v2/pokemon?offset=20&limit=10\")\r\n            .then(res => res.json())\r\n            .then(parsedJSON => parsedJSON.results.map(data => (\r\n                {\r\n                    name: `${data.name}`,\r\n                    url: `${data.url}`,\r\n                    thumbnail: `${data.name}.jpg`\r\n\r\n                }\r\n            )))\r\n            .then(pokemon => this.setState({ pokemon }))\r\n            .catch(error => console.log('parsing failed', error))\r\n    }\r\n\r\n    render() {\r\n        const { pokemon } = this.state;\r\n        return (\r\n            <Container fluid={true} className=\"py-5\">\r\n                <Container className=\"pokemonList\">\r\n                    <Row>\r\n                        <Col sm={{ size: 8, offset: 2 }} md={{ size: 6, offset: 3 }} lg={{ size: 4, offset: 4 }}>\r\n                            <h1 className=\"display-4 text-light text-center\">Pokemon List</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"bg-white px-3 py-3 mt-5\" style={{ borderRadius: \"15px\" }}>\r\n                        <Row className=\"text-center\">\r\n                            <Col sm={{ size: 12 }} md={{ size: 12 }} lg={{ size: 12 }}>\r\n                                <NavLink to=\"/my-pokemon-list\" style={{ textDecoration: \"none\" }} className=\"text-dark\">\r\n                                    <Button outline className=\"text-capitalize text-center mt-2\" color=\"warning\" style={{ fontSize: \"14px\", borderRadius: \"10px\", fontWeight: \"bold\" }}><i className=\"fa-solid fa-basket-shopping\" style={{marginRight: \"8px\"}}></i>Captured Pokemon : {this.state.myPokemon.length}</Button>\r\n                                </NavLink>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"pt-3 mt-4\">\r\n                            {\r\n                                pokemon.length > 0 ? pokemon.map(item => {\r\n                                    const { name, thumbnail } = item;\r\n                                    let urlDetail = \"/detail/\" + name;\r\n                                    return (\r\n                                        <Col xs={{ size: 6 }} sm={{ size: 4 }} lg={{ size: 3 }} xl={{ size: 2 }} className=\"mb-5\">\r\n                                            <NavLink key={name} to={urlDetail} style={{ textDecoration: \"none\" }} className=\"text-dark\">\r\n                                                <Card id=\"cardItem\" className=\"shadow-sm h-100\" style={{ borderRadius: \"15px\" }}>\r\n                                                    <CardImg draggable=\"false\" top src={\"pokemon/\" + thumbnail} title={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} alt={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} className=\"h-100 p-4\" />\r\n                                                    <CardFooter className=\"py-3\" style={{ borderBottomRightRadius: \"15px\", borderBottomLeftRadius: \"15px\", }}>\r\n                                                        <Button className=\"w-100 text-capitalize text-center disabled\" color=\"warning\" style={{ fontSize: \"20px\", borderRadius: \"15px\" }}>{name}</Button>\r\n                                                    </CardFooter>\r\n                                                </Card>\r\n                                            </NavLink>\r\n\r\n                                        </Col>\r\n                                    );\r\n                                }) : null\r\n                            }\r\n                        </Row>\r\n                    </div>\r\n\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPokemonList;","import React, { createContext } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst PokemonContext = createContext();\r\nlet arrNickname = [];\r\n\r\nexport class PokemonProvider extends React.Component {\r\n  updatepokemon = newpokemon => {\r\n    if (Math.random() * 10 > 5) {\r\n      Swal.fire({\r\n        title: 'Good Job!',\r\n        icon: 'success',\r\n        text: \"You caught \" + newpokemon[0].name + \". Please Enter A Nickname For This Pokemon\",\r\n        input: 'text',\r\n        inputValue: '',\r\n        inputPlaceholder: 'Enter your new pokemon nickname',\r\n        showCancelButton: true,\r\n        inputValidator: (val) => {\r\n          if (!val) {\r\n            return 'You need to fill nickname!'\r\n          }\r\n        }\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          newpokemon = [{ name: newpokemon[0].name, nickname: result.value }]\r\n          if (JSON.parse(localStorage.getItem('MyPokemon')) !== null || JSON.parse(localStorage.getItem('MyPokemon')) !== undefined) {\r\n            this.state.pokemon.forEach(p => {\r\n              arrNickname.push(p.nickname);\r\n            });\r\n            if (arrNickname.includes(newpokemon[0].nickname)) {\r\n              Swal.fire({\r\n                title: 'Sorry!',\r\n                input: 'text',\r\n                icon: 'error',\r\n                text: 'Please Enter A Different Nickname For This Pokemon',\r\n                inputPlaceholder: 'Your Pokemon Nickname',\r\n                inputValue: '',\r\n                showCancelButton: false,\r\n                allowOutsideClick: false,\r\n                allowEscapeKey: false,\r\n                inputValidator: (value) => {\r\n                  if (arrNickname.includes(value)) {\r\n                    return 'You need to fill with different nickname!'\r\n                  } else if (!value) {\r\n                    return 'You need to fill nickname!'\r\n                  }\r\n                }\r\n              }).then((result) => {\r\n                if (result.value) {\r\n                  newpokemon[0].nickname = result.value;\r\n                  localStorage.setItem('MyPokemon', JSON.stringify(this.state.pokemon.concat(newpokemon)));\r\n                  this.setState({ pokemon: JSON.parse(localStorage.getItem('MyPokemon')) });\r\n                  Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: 'Pokemon ' + newpokemon[0].name + ' with Nickname : ' + newpokemon[0].nickname + ' Has Been Added Successfully!',\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                  });\r\n                }\r\n              });\r\n            } else {\r\n              localStorage.setItem('MyPokemon', JSON.stringify(this.state.pokemon.concat(newpokemon)));\r\n              this.setState({ pokemon: JSON.parse(localStorage.getItem('MyPokemon')) });\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Pokemon ' + newpokemon[0].name + ' with Nickname : ' + newpokemon[0].nickname + ' Has Been Added Successfully!',\r\n                showConfirmButton: false,\r\n                timer: 2000\r\n              });\r\n            }\r\n          } else {\r\n            localStorage.setItem('MyPokemon', JSON.stringify(this.state.pokemon.concat(newpokemon)));\r\n            this.setState({ pokemon: JSON.parse(localStorage.getItem('MyPokemon')) });\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success',\r\n              text: 'Pokemon ' + newpokemon[0].name + ' with Nickname : ' + newpokemon[0].nickname + ' Has Been Added Successfully!',\r\n              showConfirmButton: false,\r\n              timer: 2000\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: \"Sorry!\",\r\n        text: \"Catch \" + newpokemon[0].name + \" Failed. Please Try Again\",\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  renamepokemon = newpokemon => {\r\n    let currentPokemon = this.state.pokemon;\r\n    let filteredPokemon = this.state.pokemon.filter(function (pokemon) {\r\n      return newpokemon == pokemon.nickname;\r\n    });\r\n\r\n    currentPokemon.forEach(p => {\r\n      arrNickname.push(p.nickname);\r\n    });\r\n\r\n    Swal.fire({\r\n      title: 'Rename Your Pokemon!',\r\n      icon: 'success',\r\n      text: \"Please Enter A New Nickname For This Pokemon\",\r\n      input: 'text',\r\n      inputValue: '' + newpokemon + '',\r\n      inputPlaceholder: 'Enter your new pokemon nickname',\r\n      showCancelButton: true,\r\n      inputValidator: (val) => {\r\n        if (!val) {\r\n          return 'You need to fill nickname!'\r\n        } else {\r\n          if (arrNickname.includes(val)) {\r\n            return 'You need to fill with different nickname!'\r\n          }\r\n        }\r\n      }\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        currentPokemon.forEach(p => {\r\n          if (p.nickname == newpokemon) {\r\n            p.nickname = result.value;\r\n          }\r\n        });\r\n        localStorage.setItem('MyPokemon', JSON.stringify(currentPokemon));\r\n        this.setState({ pokemon: JSON.parse(localStorage.getItem('MyPokemon')) });\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: 'Pokemon ' + filteredPokemon[0].name + ' Has Been Renamed to ' + filteredPokemon[0].nickname + ' Successfully!',\r\n          showConfirmButton: false,\r\n          timer: 2000\r\n        });\r\n        arrNickname = [];\r\n      }\r\n    });\r\n  };\r\n\r\n  releasepokemon = nickname => {\r\n    let filteredPokemon = this.state.pokemon.filter(function (pokemon) {\r\n      return nickname !== pokemon.nickname;\r\n    });\r\n\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        localStorage.setItem('MyPokemon', JSON.stringify(filteredPokemon));\r\n        this.setState({ pokemon: JSON.parse(localStorage.getItem('MyPokemon')) });\r\n        Swal.fire(\r\n          'Success',\r\n          \"Your pokemon with nickname : \" + nickname + \" has been released :(\",\r\n          'success'\r\n        );\r\n      } else {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          \"Your pokemon with nickname : \" + nickname + \" is safe :)\",\r\n          'error'\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  releaseallpokemon = mypokemon => {\r\n    if (mypokemon.length > 0) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          mypokemon = localStorage.clear();\r\n          this.setState({ pokemon: [] });\r\n          Swal.fire(\r\n            'Success',\r\n            'All your pokemon has been released :(',\r\n            'success'\r\n          );\r\n        } else {\r\n          Swal.fire(\r\n            'Cancelled',\r\n            'All your pokemon is safe :)',\r\n            'error'\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      Swal.fire(\r\n        'Sorry',\r\n        'Your pokemon list is empty :(',\r\n        'error'\r\n      );\r\n    }\r\n  };\r\n\r\n  state = {\r\n    pokemon: [],\r\n    updatepokemon: this.updatepokemon,\r\n    releasepokemon: this.releasepokemon,\r\n    releaseallpokemon: this.releaseallpokemon,\r\n    renamepokemon: this.renamepokemon\r\n  };\r\n\r\n  render() {\r\n\r\n    if (JSON.parse(localStorage.getItem('MyPokemon')) != null || JSON.parse(localStorage.getItem('MyPokemon')) != undefined) {\r\n      this.state.pokemon = JSON.parse(localStorage.getItem('MyPokemon'));\r\n    } else {\r\n      this.state.pokemon = [];\r\n    }\r\n\r\n    return (\r\n      <PokemonContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </PokemonContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const PokemonConsumer = PokemonContext.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PokemonConsumer } from './Pokemon-Context';\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Card,\r\n    CardTitle,\r\n    CardText,\r\n    Progress\r\n} from \"reactstrap\";\r\n\r\nclass PokemonDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokemon_details: [],\r\n            name: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = window.location.href;\r\n        let url_split = url.split(\"/\");\r\n        let pokemon_name = url_split[5];\r\n\r\n        fetch(\"https://pokeapi.co/api/v2/pokemon/\" + pokemon_name)\r\n            .then(res => res.json())\r\n            .then(pokemon_details => this.setState({\r\n                pokemon_details,\r\n                name: pokemon_name\r\n            }))\r\n            .catch(error => console.log('parsing failed', error))\r\n    }\r\n\r\n    render() {\r\n        const { name, pokemon_details } = this.state;\r\n\r\n        return (\r\n            <PokemonConsumer>\r\n                {({ updatepokemon, nickname }) => (\r\n                    <Container fluid={true} className=\"py-5\">\r\n                        <Container id=\"pokemonDetail\" className=\"bg-white p-5\" style={{ borderRadius: \"15px\" }}>\r\n                            <Row className=\"justify-content-center mb-5\">\r\n                                <Col sm={{ size: 8 }} md={{ size: 6 }} lg={{ size: 4 }}>\r\n                                    <h1 className=\"display-4 fw-bold text-dark text-center text-capitalize\">{name}</h1>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-4\">\r\n                                <Col sm={{ size: 8 }} md={{ size: 6 }} lg={{ size: 6 }} xl={{ size: 6 }}>\r\n                                    <img draggable=\"false\" className=\"shadow border border-light mb-5\" style={{ width: \"100%\", borderRadius: \"15px\" }} src={\"/pokemon/\" + name + \".jpg\"} title={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} alt={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} />\r\n                                    <Row className=\"mb-4\">\r\n                                        <Col sm={{ size: 4 }} md={{ size: 4 }} lg={{ size: 4 }} xl={{ size: 4 }}>\r\n                                            <Button className=\"w-100 text-capitalize py-2 mb-3\" color=\"danger\" style={{ borderRadius: \"10px\", fontSize: \"18px\" }} onClick={event => {\r\n                                                updatepokemon([{ name: name, nickname: nickname }]);\r\n                                            }}><b>Catch {name}</b></Button>\r\n                                        </Col>\r\n                                        <Col sm={{ size: 4 }} md={{ size: 4 }} lg={{ size: 4 }} xl={{ size: 4 }}>\r\n                                            <Link to=\"/pokemon-list\">\r\n                                                <Button className=\"w-100 py-2 mb-3\" color=\"warning\" style={{ borderRadius: \"10px\", fontSize: \"18px\" }}><b>Catch Others</b></Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col sm={{ size: 4 }} md={{ size: 4 }} lg={{ size: 4 }} xl={{ size: 4 }}>\r\n                                            <Link to=\"/my-pokemon-list\">\r\n                                                <Button color=\"info\" className=\"w-100 text-light py-2 mb-3\" style={{ borderRadius: \"10px\", fontSize: \"18px\" }}><b>My Pokemon</b></Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Card body className=\"shadow-sm bg-dark text-light mb-4 p-4\" style={{ borderRadius: \"15px\" }}>\r\n                                        <CardTitle className=\"mb-4\" tag=\"h5\">Stats</CardTitle>\r\n                                        {\r\n                                            pokemon_details.stats ?\r\n                                                pokemon_details.stats.map(item => {\r\n                                                    const { stat } = item;\r\n                                                    return (\r\n                                                        <Row>\r\n                                                            <Col sm={{ size: 5 }} md={{ size: 5 }} lg={{ size: 5 }} xl={{ size: 5 }}>\r\n                                                                <CardText className=\"text-capitalize ml-0 mb-3\" tag=\"h4\" key={stat.name}><b>{stat.name}</b></CardText>\r\n                                                            </Col>\r\n                                                            <Col sm={{ size: 7 }} md={{ size: 7 }} lg={{ size: 7 }} xl={{ size: 7 }}>\r\n                                                                <Progress color=\"warning\" value={item.base_stat} className=\"ml-0 mt-2 mb-3\" />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    );\r\n                                                }) : null\r\n                                        }\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col sm={{ size: 8 }} md={{ size: 6 }} lg={{ size: 6 }} xl={{ size: 6 }}>\r\n                                    <Card className=\"bg-dark  shadow-sm mb-4\" body style={{ borderRadius: \"15px\" }}>\r\n                                        <Row className=\"justify-content-between mb-4\">\r\n                                            <Col className=\"text-warning mb-0\" sm={{ size: 6 }} md={{ size: 6 }} lg={{ size: 6 }}>\r\n                                                <CardTitle className=\"text-light\" tag=\"h5\">Height</CardTitle>\r\n                                                <CardText tag=\"h4\" className=\"mb-4\"><b>{pokemon_details.height}'</b></CardText>\r\n                                                <CardTitle className=\"text-light\" tag=\"h5\">Weight</CardTitle>\r\n                                                <CardText tag=\"h4\" className=\"mb-4\"><b>{pokemon_details.weight} lbs</b></CardText>\r\n                                            </Col>\r\n                                            <Col className=\"text-warning\" sm={{ size: 6 }} md={{ size: 6 }} lg={{ size: 6 }}>\r\n                                                <CardTitle className=\"text-light\" tag=\"h5\">Base Experience</CardTitle>\r\n                                                <CardText tag=\"h4\" className=\"mb-4\"><b>{pokemon_details.base_experience}</b></CardText>\r\n                                                <CardTitle className=\"text-light\" tag=\"h5\">Abilities</CardTitle>\r\n                                                <CardText>\r\n                                                    {\r\n                                                        pokemon_details.abilities ?\r\n                                                            pokemon_details.abilities.map(item => {\r\n                                                                const { ability } = item;\r\n                                                                return (\r\n                                                                    <CardText tag=\"h4\" className=\"text-capitalize\" key={ability.name}><b>{ability.name}</b></CardText>\r\n                                                                );\r\n                                                            }) : null\r\n                                                    }\r\n                                                </CardText>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card>\r\n                                    <CardTitle tag=\"h5\" className=\"mb-3\">Type</CardTitle>\r\n                                    <Row className=\"mb-4\">\r\n                                        {\r\n                                            pokemon_details.types ?\r\n                                                pokemon_details.types.map(item => {\r\n                                                    const { type } = item;\r\n                                                    var randomColor = \"0\" + Math.floor(((1 + Math.random()) * Math.pow(16, 2)) / 2).toString(16).slice(-2);\r\n                                                    return (\r\n                                                        <Col className=\"mb-3\" sm={{ size: \"auto\" }} md={{ size: \"auto\" }} lg={{ size: \"auto\" }} key={type.name}>\r\n                                                            <CardText tag=\"h4\" className=\"text-capitalize text-light py-2 px-3\" style={{ backgroundColor: \"#\" + randomColor, borderColor: \"#\" + randomColor, borderRadius: \"30px\" }} key={type.name}><b>{type.name}</b></CardText>\r\n                                                        </Col>\r\n                                                    );\r\n                                                }) : null\r\n                                        }\r\n                                    </Row>\r\n                                    <CardTitle tag=\"h5\" className=\"mb-3\">Held Items</CardTitle>\r\n                                    <Row className=\"mb-4\">\r\n                                        {\r\n                                            pokemon_details.held_items ?\r\n                                                pokemon_details.held_items.map(item_hi => {\r\n                                                    const { item } = item_hi;\r\n                                                    var randomColor = \"0\" + Math.floor(((1 + Math.random()) * Math.pow(16, 2)) / 2).toString(16).slice(-2);\r\n                                                    return (\r\n                                                        <Col className=\"mb-3\" sm={{ size: \"auto\" }} md={{ size: \"auto\" }} lg={{ size: \"auto\" }} key={item.name}>\r\n                                                            <CardText tag=\"h4\" className=\"text-capitalize text-light py-2 px-3\" style={{ backgroundColor: \"#\" + randomColor, borderColor: \"#\" + randomColor, borderRadius: \"30px\" }} key={item.name}><b>{item.name}</b></CardText>\r\n                                                        </Col>\r\n                                                    );\r\n                                                }) : null\r\n                                        }\r\n                                    </Row>\r\n                                    <CardTitle tag=\"h5\" className=\"mb-4\">Moves</CardTitle>\r\n                                    <Row className=\"mb-4\">\r\n                                        {\r\n                                            pokemon_details.moves ?\r\n                                                pokemon_details.moves.map(item => {\r\n                                                    const { move } = item;\r\n                                                    var randomColor = \"0\" + Math.floor(((1 + Math.random()) * Math.pow(16, 2)) / 2).toString(16).slice(-2);\r\n                                                    return (\r\n                                                        <Col className=\"mb-3\" sm={{ size: \"auto\" }} md={{ size: \"auto\" }} lg={{ size: \"auto\" }} key={move.name}>\r\n                                                            <CardText tag=\"h4\" className=\"text-capitalize text-light py-2 px-3\" style={{ backgroundColor: \"#\" + randomColor, borderColor: \"#\" + randomColor, borderRadius: \"30px\" }} key={move.name}><b>{move.name}</b></CardText>\r\n                                                        </Col>\r\n                                                    );\r\n                                                }) : null\r\n                                        }\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Container>\r\n                )}\r\n            </PokemonConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonDetail;","import React, { Component } from \"react\";\r\nimport { PokemonConsumer } from './Pokemon-Context';\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Card,\r\n    CardImg,\r\n    CardTitle,\r\n    CardSubtitle,\r\n    CardFooter,\r\n} from \"reactstrap\";\r\n\r\nclass MyPokemon extends Component {\r\n    render() {\r\n        return (\r\n            <PokemonConsumer>\r\n                {({ pokemon, releasepokemon, releaseallpokemon, renamepokemon }) => (\r\n                    <React.Fragment>\r\n                        <Container fluid={true} className=\"py-5\">\r\n                            <Container className=\"pokemonList\">\r\n                                <Row>\r\n                                    <Col sm={{ size: 8, offset: 2 }} md={{ size: 6, offset: 3 }} lg={{ size: 4, offset: 4 }}>\r\n                                        <h1 className=\"display-4 text-light text-center\">My Pokemon</h1>\r\n                                        <p className=\"h2 fw-light text-light text-center\">Captured Pokemon List</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <div className=\"bg-white px-3 py-3 mt-5\" style={{ borderRadius: \"15px\" }}>\r\n                                    <Row className=\"text-center\">\r\n                                        <Col sm={{ size: 12 }} md={{ size: 12 }} lg={{ size: 12 }}>\r\n                                            <Button outline className=\"text-capitalize text-center mt-2 mb-3\" color=\"danger\" onClick={() => releaseallpokemon(pokemon)} style={{ fontSize: \"14px\", borderRadius: \"10px\", fontWeight: \"bold\" }}><i className=\"fa-solid fa-trash\" style={{marginRight: \"8px\"}}></i>Release All Pokemon</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"pt-3 mt-4\">\r\n                                        {\r\n                                            pokemon.length > 0 ? pokemon.map(item => {\r\n                                                const { name, nickname } = item;\r\n                                                return (\r\n                                                    <Col xs={{ size: 6 }} sm={{ size: 4 }} lg={{ size: 3 }} xl={{ size: 2 }} className=\"mb-5\">\r\n                                                        <Card id=\"cardItem\" className=\"shadow-sm h-100\" style={{ borderRadius: \"15px\" }}>\r\n                                                            <CardImg draggable=\"false\" top src={\"pokemon/\" + name + \".jpg\"} title={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} alt={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} className=\"h-100 p-4\" />\r\n                                                            <CardTitle className=\"text-capitalize text-center mb-3\" tag=\"h4\">{nickname}</CardTitle>\r\n                                                            <CardSubtitle tag=\"h6\" className=\"text-capitalize bg-warning text-center mx-4 mb-3 p-2\" style={{borderRadius: \"30px\"}}>{name}</CardSubtitle>\r\n                                                            <CardFooter className=\"py-3\" style={{ borderBottomRightRadius: \"15px\", borderBottomLeftRadius: \"15px\", }}>\r\n                                                                <Button className=\"w-100 text-capitalize text-center mb-3\" color=\"warning\" onClick={() => renamepokemon(nickname)} style={{ fontSize: \"20px\", borderRadius: \"15px\" }}><i className=\"fa-solid fa-edit\" style={{marginRight: \"8px\"}}></i>Rename</Button>\r\n                                                                <Button className=\"w-100 text-capitalize text-center\" color=\"danger\" onClick={() => releasepokemon(nickname)} style={{ fontSize: \"20px\", borderRadius: \"15px\" }}><i className=\"fa-solid fa-trash\" style={{marginRight: \"8px\"}}></i>Release</Button>\r\n                                                            </CardFooter>\r\n                                                        </Card>\r\n\r\n                                                    </Col>\r\n                                                );\r\n                                            }) : null\r\n                                        }\r\n                                    </Row>\r\n                                </div>\r\n\r\n                            </Container>\r\n                        </Container>\r\n                    </React.Fragment>\r\n                )}\r\n            </PokemonConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPokemon;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, HashRouter, Route, NavLink, Switch } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport PokemonList from \"./PokemonList\";\r\nimport PokemonDetail from \"./PokemonDetail\";\r\nimport MyPokemonList from \"./MyPokemonList\";\r\nimport { PokemonProvider } from \"./Pokemon-Context\";\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        document.title = process.env.REACT_APP_TITLE\r\n        let isActive = \"\";\r\n        const homeClass = isActive ? \"nav-link active\" : \"nav-link\";\r\n        const listClass = isActive ? \"nav-link active\" : \"nav-link\";\r\n        const myListClass = isActive ? \"nav-link active\" : \"nav-link\";\r\n\r\n        return (\r\n            <HashRouter>\r\n                <PokemonProvider>\r\n                    <div className=\"min-vh-100\" style={{ background: \"linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://assets.pokemon.com/static2/_ui/img/chrome/body_bg.png')\", backgroundSize: \"cover\", backgroundPosition: \"center\", backgroundAttachment: \"fixed\", backgroundRepeat: \"no-repeat\" }}>\r\n                        <nav variant=\"pills\" className=\"navbar navbar-expand-sm navbar-light bg-white shadow\">\r\n                            <div className=\"container-fluid\">\r\n                                <NavLink to=\"/\" draggable=\"false\" className=\"navbar-brand\">\r\n                                    <img draggable=\"false\" src=\"/pokemon_logo.png\" width=\"120\" className=\"d-inline-block align-text-top me-2\" alt={\"Favicon - \" + process.env.REACT_APP_TITLE} />\r\n                                </NavLink>\r\n                                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                                <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n                                    <ul className=\"navbar-nav me-auto\">\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/\" draggable=\"false\" className={homeClass} style={{ marginRight:\"12px\",}}><img src=\"https://img.icons8.com/ios-glyphs/20/000000/pokemon--v1.png\" style={{marginRight: \"8px\"}}/>Home</NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/pokemon-list\" draggable=\"false\" className={listClass} style={{ marginRight:\"12px\",}}><img src=\"https://img.icons8.com/ios/20/000000/pokeballs.png\" style={{marginRight: \"8px\"}}/>Pokemon List</NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/my-pokemon-list\" draggable=\"false\" className={myListClass}><img src=\"https://img.icons8.com/ios/20/000000/pokeball--v2.png\" style={{marginRight: \"8px\"}}/>My Pokemon List</NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route exact path=\"/pokemon-list\" component={PokemonList} />\r\n                            <Route path=\"/my-pokemon-list\" component={MyPokemonList} />\r\n                            <Route path=\"/detail\" component={PokemonDetail} />\r\n                        </Switch>\r\n                    </div>\r\n                </PokemonProvider>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BrowserRouter from \"react-router-dom/BrowserRouter\"\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"bootstrap/dist/js/bootstrap.min.js\"\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}